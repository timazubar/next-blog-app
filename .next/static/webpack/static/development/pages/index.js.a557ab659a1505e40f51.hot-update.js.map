{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a557ab659a1505e40f51.hot-update.js","sources":["webpack:///./components/Post.tsx","webpack:///./components/PostsList.tsx","webpack:///./pages/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport PostModel from '../models/PostModel';\r\nimport { Card } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  post: PostModel;\r\n}\r\n\r\nconst Post = ({ post }) => {\r\n  const { id, title, body } = post;\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Link>\r\n          <Link href=\"/posts/[id]\" as={`posts/${id}`}>\r\n            <a>Go to post</a>\r\n          </Link>\r\n        </Card.Link>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Body>{body}</Card.Body>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\n\r\nimport Post from './Post';\r\nimport PostModel from '../models/PostModel';\r\n\r\ninterface Props {\r\n  posts: PostModel[];\r\n}\r\n\r\nconst PostsList: React.FC<Props> = ({ posts }) => {\r\n  return (\r\n    <div>\r\n      {posts.map((post) => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostsList from '../components/PostsList';\r\n\r\nimport { fetchPosts } from '../redux/actions/postsListActions';\r\n\r\nimport PostModel from '../models/PostModel';\r\nimport StateModel from '../models/StateModel';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props {\r\n  postsList: PostModel[];\r\n  isError?: boolean;\r\n}\r\n\r\nconst Index: NextPage<Props> = ({ postsList, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <div>Something went wrong!</div>\r\n      ) : (\r\n        <>\r\n          <h2>Latest Posts:</h2>\r\n          <PostsList posts={postsList} />\r\n        </>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ store }: NextPageContext): Promise<{ postsList: PostModel[] }> => {\r\n  const { dispatch } = store;\r\n  await fetchPosts(dispatch);\r\n  const { postsList } = store.getState().postsList;\r\n\r\n  return { postsList };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.postsList.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Index);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAGA;AACA;AAEA;AAIA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}