{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e3dbda65a25f699f6770.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\nimport { Modal } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostsList from '../components/PostsList';\r\nimport { fetchPosts } from '../redux/actions/postsListActions';\r\nimport PostModel from '../models/PostModel';\r\nimport StateModel from '../models/StateModel';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props {\r\n  postsList: PostModel[];\r\n  isError?: boolean;\r\n}\r\n\r\nconst Index: NextPage<Props> = ({ postsList, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <Modal.Dialog>\r\n          <ErrorModal>Error!</ErrorModal>\r\n        </Modal.Dialog>\r\n      ) : (\r\n        <>\r\n          <h2>Latest Posts</h2>\r\n          <PostsList posts={postsList} />\r\n        </>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst ErrorModal = styled(Modal.Body)`\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n  background-color: maroon;\r\n  color: white;\r\n`;\r\n\r\nIndex.getInitialProps = async ({ store }: NextPageContext): Promise<{ postsList: PostModel[] }> => {\r\n  const { dispatch } = store;\r\n  await fetchPosts(dispatch);\r\n  const { postsList } = store.getState().postsList;\r\n\r\n  return { postsList };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.postsList.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Index);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAKA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}