{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport axios from 'axios';\n\nvar PostsService = /*#__PURE__*/function () {\n  function PostsService() {\n    _classCallCheck(this, PostsService);\n\n    _defineProperty(this, \"apiBase\", 'https://simple-blog-api.crew.red');\n  }\n\n  _createClass(PostsService, [{\n    key: \"getAllPosts\",\n    value: function getAllPosts() {\n      var _await$axios$get, data;\n\n      return _regeneratorRuntime.async(function getAllPosts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"\".concat(this.apiBase, \"/posts\")));\n\n            case 2:\n              _await$axios$get = _context.sent;\n              data = _await$axios$get.data;\n              return _context.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getPostById\",\n    value: function getPostById(id) {\n      var _await$axios$get2, data;\n\n      return _regeneratorRuntime.async(function getPostById$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(\"\".concat(this.apiBase, \"/posts/\").concat(id)));\n\n            case 2:\n              _await$axios$get2 = _context2.sent;\n              data = _await$axios$get2.data;\n              return _context2.abrupt(\"return\", data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"sendPost\",\n    value: function sendPost(post) {\n      axios.post(\"\".concat(this.apiBase, \"/posts\"), post);\n    }\n  }]);\n\n  return PostsService;\n}();\n\nexport { PostsService as default };","map":{"version":3,"sources":["C:/Users/Tima/Desktop/wl-blog/next-simple-blog/services/BlogService.ts"],"names":["axios","PostsService","get","apiBase","data","id","post"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGqBC,Y;;;;qCACD,kC;;;;;;;;;;;;;+CAGOD,KAAK,CAACE,GAAN,WAAa,KAAKC,OAAlB,Y;;;;AAAfC,cAAAA,I,oBAAAA,I;+CACDA,I;;;;;;;;;;;gCAGSC,E;;;;;;;;+CACOL,KAAK,CAACE,GAAN,WAAa,KAAKC,OAAlB,oBAAmCE,EAAnC,E;;;;AAAfD,cAAAA,I,qBAAAA,I;gDACDA,I;;;;;;;;;;;6BAGAE,I,EAAuB;AAC9BN,MAAAA,KAAK,CAACM,IAAN,WAAc,KAAKH,OAAnB,aAAoCG,IAApC;AACD;;;;;;SAfkBL,Y","sourcesContent":["import axios from 'axios';\r\nimport PostModel from '../models/PostModel';\r\n\r\nexport default class PostsService {\r\n  private apiBase = 'https://simple-blog-api.crew.red';\r\n\r\n  async getAllPosts(): Promise<PostModel[]> {\r\n    const { data } = await axios.get(`${this.apiBase}/posts`);\r\n    return data;\r\n  }\r\n\r\n  async getPostById(id: string): Promise<PostModel> {\r\n    const { data } = await axios.get(`${this.apiBase}/posts/${id}`);\r\n    return data;\r\n  }\r\n\r\n  sendPost(post: PostModel): void {\r\n    axios.post(`${this.apiBase}/posts`, post);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}