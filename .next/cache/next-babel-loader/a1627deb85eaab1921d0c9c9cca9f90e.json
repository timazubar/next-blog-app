{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Tima\\\\Desktop\\\\wl-blog\\\\next-simple-blog\\\\pages\\\\posts\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport { fetchPostByID } from '../../redux/actions/postActions';\n\nvar Post = function Post(_ref) {\n  var post = _ref.post,\n      isError = _ref.isError;\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isError ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Something went wrong!\") : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"id: \", post.id), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, post.body)));\n};\n\nPost.getInitialProps = function _callee(_ref2) {\n  var query, store, dispatch, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query, store = _ref2.store;\n          dispatch = store.dispatch;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetchPostByID(query.id, dispatch));\n\n        case 4:\n          post = store.getState().post.post;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isError: state.post.isError\n  };\n};\n\nexport default connect(mapStateToProps)(Post);","map":{"version":3,"sources":["C:/Users/Tima/Desktop/wl-blog/next-simple-blog/pages/posts/[id].tsx"],"names":["React","connect","AppLayout","fetchPostByID","Post","post","isError","title","id","body","getInitialProps","query","store","dispatch","getState","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAKA,SAASC,aAAT,QAA8B,iCAA9B;;AAOA,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB,OAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACnD,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADM,GAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYF,IAAI,CAACG,EAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,IAAI,CAACI,IAAX,CAHF,CAJJ,CADF;AAaD,CAdD;;AAgBAL,IAAI,CAACM,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT,EAAgBC,KAAhB,SAAgBA,KAAhB;AACbC,UAAAA,QADa,GACAD,KADA,CACbC,QADa;AAAA;AAAA,2CAEfV,aAAa,CAACQ,KAAK,CAACH,EAAP,EAAWK,QAAX,CAFE;;AAAA;AAGbR,UAAAA,IAHa,GAGJO,KAAK,CAACE,QAAN,GAAiBT,IAHb,CAGbA,IAHa;AAAA,2CAKd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAA8C;AACpEV,IAAAA,OAAO,EAAEU,KAAK,CAACX,IAAN,CAAWC;AADgD,GAA9C;AAAA,CAAxB;;AAIA,eAAeL,OAAO,CAACc,eAAD,CAAP,CAAyBX,IAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage } from 'next';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nimport PostModel from '../../models/PostModel';\r\nimport StateModel from '../../models/StateModel';\r\n\r\nimport { fetchPostByID } from '../../redux/actions/postActions';\r\n\r\ninterface Props {\r\n  post?: PostModel;\r\n  isError?: boolean;\r\n}\r\n\r\nconst Post: NextPage<Props> = ({ post, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <div>Something went wrong!</div>\r\n      ) : (\r\n        <div>\r\n          <h2>{post.title}</h2>\r\n          <small>id: {post.id}</small>\r\n          <div>{post.body}</div>\r\n        </div>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async ({ query, store }): Promise<{ post: PostModel }> => {\r\n  const { dispatch } = store;\r\n  await fetchPostByID(query.id, dispatch);\r\n  const { post } = store.getState().post;\r\n\r\n  return { post };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.post.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n"]},"metadata":{},"sourceType":"module"}