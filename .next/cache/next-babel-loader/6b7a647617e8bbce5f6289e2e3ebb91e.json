{"ast":null,"code":"var _jsxFileName = \"E:\\\\TIMA\\\\Projects\\\\DevelopsToday\\\\next-blog-app\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\nimport { Card, Modal } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport AppLayout from '../../components/AppLayout';\nimport { fetchPostByID } from '../../redux/actions/postActions';\n\nconst Post = ({\n  post,\n  isError\n}) => {\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, isError ? __jsx(Modal.Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(ErrorModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Error!\")) : __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Go back to posts list\")), __jsx(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(Card.Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"id: \", post.id), __jsx(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, post.body))));\n};\n\nconst ErrorModal = styled(Modal.Body)`\n  font-size: 1.5em;\n  font-weight: 500;\n  background-color: maroon;\n  color: white;\n`;\n\nPost.getInitialProps = async ({\n  query,\n  store\n}) => {\n  const {\n    dispatch\n  } = store;\n  await fetchPostByID(query.id, dispatch);\n  const {\n    post\n  } = store.getState().post;\n  return {\n    post\n  };\n};\n\nconst mapStateToProps = state => ({\n  isError: state.post.isError\n});\n\nexport default connect(mapStateToProps)(Post);","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/pages/posts/[id].tsx"],"names":["React","Link","connect","Card","Modal","styled","AppLayout","fetchPostByID","Post","post","isError","title","id","body","ErrorModal","Body","getInitialProps","query","store","dispatch","getState","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAKA,SAASC,aAAT,QAA8B,iCAA9B;;AAOA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnD,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADM,GAKN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAIE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,IAAI,CAACE,KAAlB,CAJF,EAKE,MAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBF,IAAI,CAACG,EAAzB,CALF,EAME,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,IAAI,CAACI,IAAjB,CANF,CADF,CANJ,CADF;AAoBD,CArBD;;AAuBA,MAAMC,UAAU,GAAGT,MAAM,CAACD,KAAK,CAACW,IAAP,CAAa;;;;;CAAtC;;AAOAP,IAAI,CAACQ,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0D;AAC/E,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAMX,aAAa,CAACU,KAAK,CAACL,EAAP,EAAWO,QAAX,CAAnB;AACA,QAAM;AAAEV,IAAAA;AAAF,MAAWS,KAAK,CAACE,QAAN,GAAiBX,IAAlC;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,MAAMY,eAAe,GAAIC,KAAD,KAA8C;AACpEZ,EAAAA,OAAO,EAAEY,KAAK,CAACb,IAAN,CAAWC;AADgD,CAA9C,CAAxB;;AAIA,eAAeR,OAAO,CAACmB,eAAD,CAAP,CAAyBb,IAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage } from 'next';\r\nimport Link from 'next/link';\r\nimport { connect } from 'react-redux';\r\nimport { Card, Modal } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nimport PostModel from '../../models/PostModel';\r\nimport StateModel from '../../models/StateModel';\r\n\r\nimport { fetchPostByID } from '../../redux/actions/postActions';\r\n\r\ninterface Props {\r\n  post?: PostModel;\r\n  isError?: boolean;\r\n}\r\n\r\nconst Post: NextPage<Props> = ({ post, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <Modal.Dialog>\r\n          <ErrorModal>Error!</ErrorModal>\r\n        </Modal.Dialog>\r\n      ) : (\r\n        <Card>\r\n          <Card.Body>\r\n            <Link href=\"/\">\r\n              <a>Go back to posts list</a>\r\n            </Link>\r\n            <Card.Title>{post.title}</Card.Title>\r\n            <Card.Subtitle>id: {post.id}</Card.Subtitle>\r\n            <Card.Text>{post.body}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst ErrorModal = styled(Modal.Body)`\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n  background-color: maroon;\r\n  color: white;\r\n`;\r\n\r\nPost.getInitialProps = async ({ query, store }): Promise<{ post: PostModel }> => {\r\n  const { dispatch } = store;\r\n  await fetchPostByID(query.id, dispatch);\r\n  const { post } = store.getState().post;\r\n\r\n  return { post };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.post.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n"]},"metadata":{},"sourceType":"module"}