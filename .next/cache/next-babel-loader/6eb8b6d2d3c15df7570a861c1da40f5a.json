{"ast":null,"code":"var _jsxFileName = \"E:\\\\TIMA\\\\Projects\\\\DevelopsToday\\\\next-blog-app\\\\pages\\\\posts\\\\new.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport AppLayout from '../../components/AppLayout';\nimport { sendPost } from '../../redux/actions/createPostActions';\n\nconst CreatePost = ({\n  sendPost,\n  isSent,\n  isLoading,\n  isError\n}) => {\n  const titleRef = useRef(null);\n  const contentRef = useRef(null);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"CreatePost\"), __jsx(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      const title = titleRef.current.value;\n      const body = contentRef.current.value;\n      contentRef.current.value = '';\n      titleRef.current.value = '';\n      sendPost({\n        title,\n        body\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Label, {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Post title: \", __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    ref: titleRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Label, {\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Contents:\", __jsx(\"textarea\", {\n    name: \"body\",\n    ref: contentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Post!\"))), isSent && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, \"Your Post was created!\"), isError && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Something went wrong!\"));\n};\n\nconst mapStateToProps = state => ({\n  isSent: state.createPost.isSent,\n  isLoading: state.createPost.isLoading,\n  isError: state.createPost.isError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sendPost: sendPost(dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/pages/posts/new.tsx"],"names":["React","useRef","connect","Form","AppLayout","sendPost","CreatePost","isSent","isLoading","isError","titleRef","contentRef","e","preventDefault","title","current","value","body","mapStateToProps","state","createPost","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AAKA,SAASC,QAAT,QAAyB,uCAAzB;;AAYA,MAAMC,UAA2B,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA,MAAZ;AAAoBC,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8C;AAChF,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMU,UAAU,GAAGV,MAAM,CAAC,IAAD,CAAzB;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,MAAC,IAAD;AACE,IAAA,QAAQ,EAAGW,CAAD,IAAa;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAA/B;AACA,YAAMC,IAAI,GAAGN,UAAU,CAACI,OAAX,CAAmBC,KAAhC;AACAL,MAAAA,UAAU,CAACI,OAAX,CAAmBC,KAAnB,GAA2B,EAA3B;AACAN,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACAX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,KAAF;AAASG,QAAAA;AAAT,OAAD,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACc;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,GAAG,EAAEP,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,CADF,EAKE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEH,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAVF,CAFF,EA0BGD,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA1Bb,EA2BGE,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA3Bd,CADF;AA+BD,CAnCD;;AAqCA,MAAMS,eAAe,GAAIC,KAAD,KAA+B;AACrDZ,EAAAA,MAAM,EAAEY,KAAK,CAACC,UAAN,CAAiBb,MAD4B;AAErDC,EAAAA,SAAS,EAAEW,KAAK,CAACC,UAAN,CAAiBZ,SAFyB;AAGrDC,EAAAA,OAAO,EAAEU,KAAK,CAACC,UAAN,CAAiBX;AAH2B,CAA/B,CAAxB;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,KAA2E;AACpGjB,EAAAA,QAAQ,EAAEA,QAAQ,CAACiB,QAAD;AADkF,CAA3E,CAA3B;;AAIA,eAAepB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,UAA7C,CAAf","sourcesContent":["import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NextPage } from 'next';\r\nimport { Dispatch } from 'redux';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nimport PostModel from '../../models/PostModel';\r\nimport StateModel from '../../models/StateModel';\r\n\r\nimport { sendPost } from '../../redux/actions/createPostActions';\r\n\r\ninterface State {\r\n  isSent: boolean;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n}\r\n\r\ninterface Props extends State {\r\n  sendPost: (post: PostModel) => Promise<void>;\r\n}\r\n\r\nconst CreatePost: NextPage<Props> = ({ sendPost, isSent, isLoading, isError }) => {\r\n  const titleRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <h2>CreatePost</h2>\r\n      <Form\r\n        onSubmit={(e): void => {\r\n          e.preventDefault();\r\n          const title = titleRef.current.value;\r\n          const body = contentRef.current.value;\r\n          contentRef.current.value = '';\r\n          titleRef.current.value = '';\r\n          sendPost({ title, body });\r\n        }}\r\n      >\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"title\">\r\n            Post title: <input type=\"text\" name=\"title\" ref={titleRef} />\r\n          </Form.Label>\r\n\r\n          <Form.Label htmlFor=\"body\">\r\n            Contents:\r\n            <textarea name=\"body\" ref={contentRef} />\r\n          </Form.Label>\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            Post!\r\n          </button>\r\n        </Form.Group>\r\n      </Form>\r\n      {isSent && <div>Your Post was created!</div>}\r\n      {isError && <div>Something went wrong!</div>}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): State => ({\r\n  isSent: state.createPost.isSent,\r\n  isLoading: state.createPost.isLoading,\r\n  isError: state.createPost.isError,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): { sendPost: (post: PostModel) => Promise<void> } => ({\r\n  sendPost: sendPost(dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePost);\r\n"]},"metadata":{},"sourceType":"module"}