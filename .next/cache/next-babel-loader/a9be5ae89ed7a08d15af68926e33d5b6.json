{"ast":null,"code":"import BlogService from '../../services/BlogService';\nvar actionTypes;\n\n(function (actionTypes) {\n  actionTypes[\"SEND_POST_REQUEST\"] = \"SEND_POST_REQUEST\";\n  actionTypes[\"SEND_POST_SUCCESS\"] = \"SEND_POST_SUCCESS\";\n  actionTypes[\"SEND_POST_FAILURE\"] = \"SEND_POST_FAILURE\";\n  actionTypes[\"TOGGLE_SENT_STATUS\"] = \"TOGGLE_SENT_STATUS\";\n})(actionTypes || (actionTypes = {}));\n\nconst postSendRequested = () => ({\n  type: actionTypes.SEND_POST_REQUEST\n});\n\nconst postSendError = error => ({\n  type: actionTypes.SEND_POST_FAILURE,\n  payload: error\n});\n\nconst postSendSuccess = () => ({\n  type: actionTypes.SEND_POST_SUCCESS\n});\n\nconst toggleSentStatus = () => ({\n  type: actionTypes.TOGGLE_SENT_STATUS\n});\n\nconst sendPost = dispatch => async post => {\n  const blogService = new BlogService();\n\n  try {\n    dispatch(postSendRequested());\n    blogService.sendPost(post);\n    dispatch(postSendSuccess());\n    dispatch(toggleSentStatus());\n    setTimeout(() => {\n      dispatch(toggleSentStatus());\n    }, 800);\n  } catch (err) {\n    dispatch(postSendError(err));\n  }\n};\n\nexport { actionTypes, sendPost };","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/redux/actions/createPostActions.ts"],"names":["BlogService","actionTypes","postSendRequested","type","SEND_POST_REQUEST","postSendError","error","SEND_POST_FAILURE","payload","postSendSuccess","SEND_POST_SUCCESS","toggleSentStatus","TOGGLE_SENT_STATUS","sendPost","dispatch","post","blogService","setTimeout","err"],"mappings":"AACA,OAAOA,WAAP,MAAwB,4BAAxB;IAGKC,W;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAQL,MAAMC,iBAAiB,GAAG,OAAkB;AAC1CC,EAAAA,IAAI,EAAEF,WAAW,CAACG;AADwB,CAAlB,CAA1B;;AAIA,MAAMC,aAAa,GAAIC,KAAD,KAA8B;AAClDH,EAAAA,IAAI,EAAEF,WAAW,CAACM,iBADgC;AAElDC,EAAAA,OAAO,EAAEF;AAFyC,CAA9B,CAAtB;;AAKA,MAAMG,eAAe,GAAG,OAAkB;AACxCN,EAAAA,IAAI,EAAEF,WAAW,CAACS;AADsB,CAAlB,CAAxB;;AAIA,MAAMC,gBAAgB,GAAG,OAAkB;AACzCR,EAAAA,IAAI,EAAEF,WAAW,CAACW;AADuB,CAAlB,CAAzB;;AAIA,MAAMC,QAAQ,GAAIC,QAAD,IAAwB,MAAOC,IAAP,IAA0C;AACjF,QAAMC,WAAW,GAAG,IAAIhB,WAAJ,EAApB;;AACA,MAAI;AACFc,IAAAA,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR;AACAc,IAAAA,WAAW,CAACH,QAAZ,CAAqBE,IAArB;AACAD,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACAK,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACAM,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GARD,CAQE,OAAOO,GAAP,EAAY;AACZJ,IAAAA,QAAQ,CAACT,aAAa,CAACa,GAAD,CAAd,CAAR;AACD;AACF,CAbD;;AAeA,SAASjB,WAAT,EAAsBY,QAAtB","sourcesContent":["import PostModel from '../../models/PostModel';\r\nimport BlogService from '../../services/BlogService';\r\nimport { Dispatch, AnyAction } from 'redux';\r\n\r\nenum actionTypes {\r\n  SEND_POST_REQUEST = 'SEND_POST_REQUEST',\r\n  SEND_POST_SUCCESS = 'SEND_POST_SUCCESS',\r\n  SEND_POST_FAILURE = 'SEND_POST_FAILURE',\r\n\r\n  TOGGLE_SENT_STATUS = 'TOGGLE_SENT_STATUS',\r\n}\r\n\r\nconst postSendRequested = (): AnyAction => ({\r\n  type: actionTypes.SEND_POST_REQUEST,\r\n});\r\n\r\nconst postSendError = (error: Error): AnyAction => ({\r\n  type: actionTypes.SEND_POST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nconst postSendSuccess = (): AnyAction => ({\r\n  type: actionTypes.SEND_POST_SUCCESS,\r\n});\r\n\r\nconst toggleSentStatus = (): AnyAction => ({\r\n  type: actionTypes.TOGGLE_SENT_STATUS,\r\n});\r\n\r\nconst sendPost = (dispatch: Dispatch) => async (post: PostModel): Promise<void> => {\r\n  const blogService = new BlogService();\r\n  try {\r\n    dispatch(postSendRequested());\r\n    blogService.sendPost(post);\r\n    dispatch(postSendSuccess());\r\n    dispatch(toggleSentStatus());\r\n    setTimeout(() => {\r\n      dispatch(toggleSentStatus());\r\n    }, 800);\r\n  } catch (err) {\r\n    dispatch(postSendError(err));\r\n  }\r\n};\r\n\r\nexport { actionTypes, sendPost };\r\n"]},"metadata":{},"sourceType":"module"}