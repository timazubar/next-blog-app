{"ast":null,"code":"import BlogService from '../../services/BlogService';\nexport const SEND_POST_REQUEST = 'SEND_POST_REQUEST';\nexport const SEND_POST_SUCCESS = 'SEND_POST_SUCCESS';\nexport const SEND_POST_FAILURE = 'SEND_POST_FAILURE';\nexport const TOGGLE_SENT_STATUS = 'TOGGLE_SENT_STATUS';\n\nconst postSendRequest = () => ({\n  type: SEND_POST_REQUEST\n});\n\nconst postSendSuccess = () => ({\n  type: SEND_POST_SUCCESS\n});\n\nconst postSendError = error => ({\n  type: SEND_POST_FAILURE,\n  payload: error\n});\n\nconst toggleSentStatus = () => ({\n  type: TOGGLE_SENT_STATUS\n});\n\nconst sendPost = dispatch => async post => {\n  const blogService = new BlogService();\n\n  try {\n    dispatch(postSendRequest());\n    blogService.sendPost(post);\n    dispatch(postSendSuccess());\n    dispatch(toggleSentStatus());\n  } catch (error) {\n    dispatch(postSendError(error));\n  }\n};\n\nexport { sendPost };","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/redux/actions/createPostActions.ts"],"names":["BlogService","SEND_POST_REQUEST","SEND_POST_SUCCESS","SEND_POST_FAILURE","TOGGLE_SENT_STATUS","postSendRequest","type","postSendSuccess","postSendError","error","payload","toggleSentStatus","sendPost","dispatch","post","blogService"],"mappings":"AAEA,OAAOA,WAAP,MAAwB,4BAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;;AAEP,MAAMC,eAAe,GAAG,OAAkB;AACxCC,EAAAA,IAAI,EAAEL;AADkC,CAAlB,CAAxB;;AAIA,MAAMM,eAAe,GAAG,OAAkB;AACxCD,EAAAA,IAAI,EAAEJ;AADkC,CAAlB,CAAxB;;AAIA,MAAMM,aAAa,GAAIC,KAAD,KAA8B;AAClDH,EAAAA,IAAI,EAAEH,iBAD4C;AAElDO,EAAAA,OAAO,EAAED;AAFyC,CAA9B,CAAtB;;AAKA,MAAME,gBAAgB,GAAG,OAAkB;AACzCL,EAAAA,IAAI,EAAEF;AADmC,CAAlB,CAAzB;;AAIA,MAAMQ,QAAQ,GAAIC,QAAD,IAAwB,MACvCC,IADuC,IAErB;AAClB,QAAMC,WAAW,GAAG,IAAIf,WAAJ,EAApB;;AACA,MAAI;AACFa,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACAU,IAAAA,WAAW,CAACH,QAAZ,CAAqBE,IAArB;AACAD,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACAM,IAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD,GALD,CAKE,OAAOF,KAAP,EAAc;AACdI,IAAAA,QAAQ,CAACL,aAAa,CAACC,KAAD,CAAd,CAAR;AACD;AACF,CAZD;;AAcA,SAASG,QAAT","sourcesContent":["import { AnyAction, Dispatch } from 'redux';\r\nimport PostModel from '../../models/PostModel';\r\nimport BlogService from '../../services/BlogService';\r\n\r\nexport const SEND_POST_REQUEST = 'SEND_POST_REQUEST';\r\nexport const SEND_POST_SUCCESS = 'SEND_POST_SUCCESS';\r\nexport const SEND_POST_FAILURE = 'SEND_POST_FAILURE';\r\nexport const TOGGLE_SENT_STATUS = 'TOGGLE_SENT_STATUS';\r\n\r\nconst postSendRequest = (): AnyAction => ({\r\n  type: SEND_POST_REQUEST,\r\n});\r\n\r\nconst postSendSuccess = (): AnyAction => ({\r\n  type: SEND_POST_SUCCESS,\r\n});\r\n\r\nconst postSendError = (error: Error): AnyAction => ({\r\n  type: SEND_POST_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nconst toggleSentStatus = (): AnyAction => ({\r\n  type: TOGGLE_SENT_STATUS,\r\n});\r\n\r\nconst sendPost = (dispatch: Dispatch) => async (\r\n  post: PostModel\r\n): Promise<void> => {\r\n  const blogService = new BlogService();\r\n  try {\r\n    dispatch(postSendRequest());\r\n    blogService.sendPost(post);\r\n    dispatch(postSendSuccess());\r\n    dispatch(toggleSentStatus());\r\n  } catch (error) {\r\n    dispatch(postSendError(error));\r\n  }\r\n};\r\n\r\nexport { sendPost };\r\n"]},"metadata":{},"sourceType":"module"}