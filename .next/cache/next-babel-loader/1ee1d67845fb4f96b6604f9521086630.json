{"ast":null,"code":"var _jsxFileName = \"E:\\\\TIMA\\\\Projects\\\\DevelopsToday\\\\next-blog-app\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport AppLayout from '../components/AppLayout';\nimport PostsList from '../components/PostsList';\nimport { fetchPosts } from '../redux/actions/postsListActions';\nimport { connect } from 'react-redux';\n\nconst Index = ({\n  postsList,\n  isError\n}) => {\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, isError ? __jsx(Modal.Dialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(ErrorModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Something went wrong!\")) : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Latest Posts:\"), __jsx(PostsList, {\n    posts: postsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst ErrorModal = styled(Modal.Body)`\n  font-size: 1.5em;\n  font-weight: 500;\n  background-color: maroon;\n  color: white;\n`;\n\nIndex.getInitialProps = async ({\n  store\n}) => {\n  const {\n    dispatch\n  } = store;\n  await fetchPosts(dispatch);\n  const {\n    postsList\n  } = store.getState().postsList;\n  return {\n    postsList\n  };\n};\n\nconst mapStateToProps = state => ({\n  isError: state.postsList.isError\n});\n\nexport default connect(mapStateToProps)(Index);","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/pages/index.tsx"],"names":["React","Modal","AppLayout","PostsList","fetchPosts","connect","Index","postsList","isError","ErrorModal","styled","Body","getInitialProps","store","dispatch","getState","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAGA,SAASC,OAAT,QAAwB,aAAxB;;AAOA,MAAMC,KAAsB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AACzD,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADM,GAKN,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,CADF;AAcD,CAfD;;AAiBA,MAAME,UAAU,GAAGC,MAAM,CAACT,KAAK,CAACU,IAAP,CAAa;;;;;CAAtC;;AAOAL,KAAK,CAACM,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAA2E;AACjG,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAMT,UAAU,CAACU,QAAD,CAAhB;AACA,QAAM;AAAEP,IAAAA;AAAF,MAAgBM,KAAK,CAACE,QAAN,GAAiBR,SAAvC;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,MAAMS,eAAe,GAAIC,KAAD,KAA8C;AACpET,EAAAA,OAAO,EAAES,KAAK,CAACV,SAAN,CAAgBC;AAD2C,CAA9C,CAAxB;;AAIA,eAAeH,OAAO,CAACW,eAAD,CAAP,CAAyBV,KAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostsList from '../components/PostsList';\r\nimport { fetchPosts } from '../redux/actions/postsListActions';\r\nimport PostModel from '../models/PostModel';\r\nimport StateModel from '../models/StateModel';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props {\r\n  postsList: PostModel[];\r\n  isError?: boolean;\r\n}\r\n\r\nconst Index: NextPage<Props> = ({ postsList, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <Modal.Dialog>\r\n          <ErrorModal>Something went wrong!</ErrorModal>\r\n        </Modal.Dialog>\r\n      ) : (\r\n        <>\r\n          <h2>Latest Posts:</h2>\r\n          <PostsList posts={postsList} />\r\n        </>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nconst ErrorModal = styled(Modal.Body)`\r\n  font-size: 1.5em;\r\n  font-weight: 500;\r\n  background-color: maroon;\r\n  color: white;\r\n`;\r\n\r\nIndex.getInitialProps = async ({ store }: NextPageContext): Promise<{ postsList: PostModel[] }> => {\r\n  const { dispatch } = store;\r\n  await fetchPosts(dispatch);\r\n  const { postsList } = store.getState().postsList;\r\n\r\n  return { postsList };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.postsList.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Index);\r\n"]},"metadata":{},"sourceType":"module"}