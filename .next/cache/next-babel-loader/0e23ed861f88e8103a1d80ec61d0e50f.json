{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tima\\\\Desktop\\\\wl-blog\\\\next-simple-blog\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Layout';\nimport { ArticleTitle, Article, ArticleBody, FailureBanner } from '../../styled-components';\nimport { fetchPostByID } from '../../redux/actions/postActions';\n\nconst Post = ({\n  post,\n  isError\n}) => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, isError ? __jsx(FailureBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Something went wrong!\") : __jsx(Article, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(ArticleTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"id: \", post.id), __jsx(ArticleBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, post.body)));\n};\n\nPost.getInitialProps = async ({\n  query,\n  store\n}) => {\n  const {\n    dispatch\n  } = store;\n  await fetchPostByID(query.id, dispatch);\n  const {\n    post\n  } = store.getState().post;\n  return {\n    post\n  };\n};\n\nconst mapStateToProps = state => ({\n  isError: state.post.isError\n});\n\nexport default connect(mapStateToProps)(Post);","map":{"version":3,"sources":["C:/Users/Tima/Desktop/wl-blog/next-simple-blog/pages/posts/[id].tsx"],"names":["React","connect","Layout","ArticleTitle","Article","ArticleBody","FailureBanner","fetchPostByID","Post","post","isError","title","id","body","getInitialProps","query","store","dispatch","getState","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,WAAhC,EAA6CC,aAA7C,QAAkE,yBAAlE;AAKA,SAASC,aAAT,QAA8B,iCAA9B;;AAOA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADM,GAGN,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeD,IAAI,CAACE,KAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYF,IAAI,CAACG,EAAjB,CAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcH,IAAI,CAACI,IAAnB,CAHF,CAJJ,CADF;AAaD,CAdD;;AAgBAL,IAAI,CAACM,eAAL,GAAuB,OAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KAA0D;AAC/E,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAMT,aAAa,CAACQ,KAAK,CAACH,EAAP,EAAWK,QAAX,CAAnB;AACA,QAAM;AAAER,IAAAA;AAAF,MAAWO,KAAK,CAACE,QAAN,GAAiBT,IAAlC;AAEA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,MAAMU,eAAe,GAAIC,KAAD,KAA8C;AACpEV,EAAAA,OAAO,EAAEU,KAAK,CAACX,IAAN,CAAWC;AADgD,CAA9C,CAAxB;;AAIA,eAAeT,OAAO,CAACkB,eAAD,CAAP,CAAyBX,IAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage } from 'next';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Layout from '../../components/Layout';\r\nimport { ArticleTitle, Article, ArticleBody, FailureBanner } from '../../styled-components';\r\n\r\nimport PostModel from '../../models/PostModel';\r\nimport StateModel from '../../models/StateModel';\r\n\r\nimport { fetchPostByID } from '../../redux/actions/postActions';\r\n\r\ninterface Props {\r\n  post?: PostModel;\r\n  isError?: boolean;\r\n}\r\n\r\nconst Post: NextPage<Props> = ({ post, isError }) => {\r\n  return (\r\n    <Layout>\r\n      {isError ? (\r\n        <FailureBanner>Something went wrong!</FailureBanner>\r\n      ) : (\r\n        <Article>\r\n          <ArticleTitle>{post.title}</ArticleTitle>\r\n          <small>id: {post.id}</small>\r\n          <ArticleBody>{post.body}</ArticleBody>\r\n        </Article>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async ({ query, store }): Promise<{ post: PostModel }> => {\r\n  const { dispatch } = store;\r\n  await fetchPostByID(query.id, dispatch);\r\n  const { post } = store.getState().post;\r\n\r\n  return { post };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.post.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n"]},"metadata":{},"sourceType":"module"}