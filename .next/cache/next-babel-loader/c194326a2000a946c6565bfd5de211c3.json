{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TIMA\\\\Projects\\\\DevelopsToday\\\\next-blog-app\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AppLayout from '../components/AppLayout';\nimport PostsList from '../components/PostsList';\nimport { fetchPosts } from '../redux/actions/postsListActions';\nimport { connect } from 'react-redux';\n\nvar Index = function Index(_ref) {\n  var postsList = _ref.postsList,\n      isError = _ref.isError;\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, isError ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Something went wrong!\") : __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Latest Posts:\"), __jsx(PostsList, {\n    posts: postsList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })));\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var store, dispatch, postsList;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref2.store;\n          dispatch = store.dispatch;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetchPosts(dispatch));\n\n        case 4:\n          postsList = store.getState().postsList.postsList;\n          return _context.abrupt(\"return\", {\n            postsList: postsList\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isError: state.postsList.isError\n  };\n};\n\nexport default connect(mapStateToProps)(Index);","map":{"version":3,"sources":["E:/TIMA/Projects/DevelopsToday/next-blog-app/pages/index.tsx"],"names":["React","AppLayout","PostsList","fetchPosts","connect","Index","postsList","isError","getInitialProps","store","dispatch","getState","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAASC,UAAT,QAA2B,mCAA3B;AAIA,SAASC,OAAT,QAAwB,aAAxB;;AAOA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAA4B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzD,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADM,GAGN,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAED,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJJ,CADF;AAYD,CAbD;;AAeAD,KAAK,CAACG,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AACdC,UAAAA,QADc,GACDD,KADC,CACdC,QADc;AAAA;AAAA,2CAEhBP,UAAU,CAACO,QAAD,CAFM;;AAAA;AAGdJ,UAAAA,SAHc,GAGAG,KAAK,CAACE,QAAN,GAAiBL,SAHjB,CAGdA,SAHc;AAAA,2CAKf;AAAEA,YAAAA,SAAS,EAATA;AAAF,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAA8C;AACpEN,IAAAA,OAAO,EAAEM,KAAK,CAACP,SAAN,CAAgBC;AAD2C,GAA9C;AAAA,CAAxB;;AAIA,eAAeH,OAAO,CAACQ,eAAD,CAAP,CAAyBP,KAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostsList from '../components/PostsList';\r\n\r\nimport { fetchPosts } from '../redux/actions/postsListActions';\r\n\r\nimport PostModel from '../models/PostModel';\r\nimport StateModel from '../models/StateModel';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface Props {\r\n  postsList: PostModel[];\r\n  isError?: boolean;\r\n}\r\n\r\nconst Index: NextPage<Props> = ({ postsList, isError }) => {\r\n  return (\r\n    <AppLayout>\r\n      {isError ? (\r\n        <div>Something went wrong!</div>\r\n      ) : (\r\n        <>\r\n          <h2>Latest Posts:</h2>\r\n          <PostsList posts={postsList} />\r\n        </>\r\n      )}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async ({ store }: NextPageContext): Promise<{ postsList: PostModel[] }> => {\r\n  const { dispatch } = store;\r\n  await fetchPosts(dispatch);\r\n  const { postsList } = store.getState().postsList;\r\n\r\n  return { postsList };\r\n};\r\n\r\nconst mapStateToProps = (state: StateModel): { isError: boolean } => ({\r\n  isError: state.postsList.isError,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Index);\r\n"]},"metadata":{},"sourceType":"module"}